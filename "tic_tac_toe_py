{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOH6fQuskd9KFg5+AEMonqm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sabziro08/dz/blob/main/%22tic_tac_toe_py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "def draw_board(board):\n",
        "    print(f\" {board[1]} | {board[2]} | {board[3]} \")\n",
        "    print(\"-----------\")\n",
        "    print(f\" {board[4]} | {board[5]} | {board[6]} \")\n",
        "    print(\"-----------\")\n",
        "    print(f\" {board[7]} | {board[8]} | {board[9]} \")\n",
        "def get_player_move(board, player_symbol):\n",
        "    while True:\n",
        "        move = int(input(\"Ваш ход (1-9): \"))\n",
        "        if move in range(1, 10) and board[move] == \" \":\n",
        "            board[move] = player_symbol\n",
        "            break\n",
        "        else:\n",
        "            print(\"Недопустимый ход, попробуйте снова\")\n",
        "def get_computer_move(board, computer_symbol):\n",
        "    while True:\n",
        "        move = random.randint(1, 9)\n",
        "        if board[move] == \" \":\n",
        "            board[move] = computer_symbol\n",
        "            break\n",
        "def check_win(board, player_symbol):\n",
        "    winning_combinations = [\n",
        "        [1, 2, 3],\n",
        "        [4, 5, 6],\n",
        "        [7, 8, 9],\n",
        "        [1, 4, 7],\n",
        "        [2, 5, 8],\n",
        "        [3, 6, 9],\n",
        "        [1, 5, 9],\n",
        "        [3, 5, 7]\n",
        "    ]\n",
        "\n",
        "    for combination in winning_combinations:\n",
        "        if board[combination[0]] == board[combination[1]] == board[combination[2]] == player_symbol:\n",
        "            return True\n",
        "\n",
        "    return False\n",
        "def main():\n",
        "    board = [\" \"] * 10\n",
        "\n",
        "    while True:\n",
        "        draw_board(board)\n",
        "\n",
        "        get_player_move(board, \"X\")\n",
        "        if check_win(board, \"X\"):\n",
        "            print(\"Вы выиграли!\")\n",
        "            break\n",
        "        if \" \" not in board:\n",
        "            print(\"Ничья!\")\n",
        "            break\n",
        "\n",
        "        get_computer_move(board, \"O\")\n",
        "        if check_win(board, \"O\"):\n",
        "            print(\"Увы, проигрыш!\")\n",
        "            break\n",
        "        if \" \" not in board:\n",
        "            print(\"Ничья!\")\n",
        "            break\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "cXLG1G0yaSN3"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}